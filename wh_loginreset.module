<?php

/**
 * @file
 */

/**
 * Implements hook_init().
 */
function wh_loginreset_init() {
  global $user;
  $account = user_load($user->uid);
  $timestamp_deadline = variable_get('wh_loginreset_deadline', 1397851518);
  $last_reset = _get_timestamp_of_last_reset();

  $logout_url = 'logout';
  $reset_url = 'user/password';
  $is_not_logout_url = $_GET['q'] != $logout_url;
  $is_not_a_reset_url = !(strpos($_GET['q'], $reset_url) === 0);
  $is_not_user_edit_url = !(strpos($_GET['q'], 'user') === 0);

  drupal_set_message('Logged in? ' . user_is_logged_in());
  drupal_set_message('Deadline passed? Deadline: ' . $timestamp_deadline . ' | Last Reset: ' .  $last_reset);
  drupal_set_message('Not logout url? ' . $is_not_logout_url);

  if(user_is_logged_in() && $timestamp_deadline > $last_reset && $is_not_logout_url && $is_not_a_reset_url && $is_not_user_edit_url) {
    // Reset the password
    watchdog('Redirect', 'redirect');
    drupal_goto('logout');
  }
  watchdog('Redirect', 'Allowing you through');
}

/**
 * Implements hook_user().
 */
function wh_loginreset_user($op, &$edit, &$account, $category = NULL) {
  global $user;
  $timestamp_deadline = variable_get('wh_loginreset_deadline', 1397851518);
  $last_reset = _get_timestamp_of_last_reset();

  if ($op == 'logout' && $timestamp_deadline > $last_reset) {
    drupal_set_message("Your password has been reset. Please check your email for a login link.");
    _user_mail_notify('password_reset', $account);
    watchdog('Redirect', 'Email Sent');
  }
  else if ($op == 'update' && isset($account->pass) && $user->uid == $account->uid) {
    _set_password_reset_timestamp();
  }
}

/**
 * Reads from the wh_loginreset table.
 */
function _get_timestamp_of_last_reset() {
  global $user;
  $uid = $user->uid;

  $query = "SELECT * FROM {wh_loginreset} WHERE uid = %d";
  $result = db_query($query, $uid);
  $row = db_fetch_array($result);

  if (is_array($row)) {
    return $row['pw_reset_timestamp'];
  }
  else {
    return 0;
  }
}

/**
 * Writes to the wh_loginreset table
 */
function _set_password_reset_timestamp() {
  global $user;
  $uid = $user->uid;
  $password_has_not_been_reset = _get_timestamp_of_last_reset() == 0;

  if ($password_has_not_been_reset) {
    // The user hasn't reset their password.
    $query = "INSERT into {wh_loginreset} (uid, pw_reset_timestamp) VALUES (%d, %d)";
    $result = db_query($query, $uid, time());

  }
  else {
    $query = "UPDATE {wh_loginreset} SET pw_reset_timestamp = %d WHERE uid = %d";
    $result = db_query($query, time(), $uid);
  }
}